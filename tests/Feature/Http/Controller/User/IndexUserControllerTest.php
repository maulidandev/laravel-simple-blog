<?php

namespace Tests\Feature\Http\Controller\User;

use App\Models\User;
use Database\Seeders\UserSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class IndexUserControllerTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seed(UserSeeder::class);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function testAccessIndexPage()
    {
        // factory users
        User::factory()->count(10)->create();

        // get json response
        $response = $this->withHeader("Content-Type", "application/json")
            ->json("get", route("admin.users.index"));

        // assert status
        $response->assertStatus(200);

        // assert json count data.*.name
        $response->assertJsonCount(10, "data.*.name");
    }

    public function testAccessWithSearchByName(){
        // factory users
        User::factory()->create([
            "name" => "John",
            "email" => "john@email.com"
        ]);
        User::factory()->create([
            "name" => "Doe",
            "email" => "doe@email.com"
        ]);

        // get json response
        $response = $this->withHeader("Content-Type", "application/json")
            ->json("get", route("admin.users.index") . "?search=john");

        // assert status
        $response->assertStatus(200);

        // assert json count data.*.name
        $response->assertJsonCount(1, "data.*.name");
    }

    public function testAccessWithSearchByEmail(){
        // factory users
        User::factory()->create([
            "name" => "John",
            "email" => "john@email.com"
        ]);
        User::factory()->create([
            "name" => "Doe",
            "email" => "doe@email.com"
        ]);

        // get json response
        $response = $this->withHeader("Content-Type", "application/json")
            ->json("get", route("admin.users.index") . "?search=john@email.com");

        // assert status
        $response->assertStatus(200);

        // assert json count data.*.name
        $response->assertJsonCount(1, "data.*.name");
    }

    public function testAccessWithFilterByRole(){
        // factory users
        User::factory()->create([
            "name" => "John",
            "email" => "john@email.com",
            "role_id" => 1
        ]);
        User::factory()->create([
            "name" => "Doe",
            "email" => "doe@email.com",
            "role_id" => 2
        ]);

        // get json response
        $response = $this->withHeader("Content-Type", "application/json")
            ->json("get", route("admin.users.index") . "?role=1");

        // assert status
        $response->assertStatus(200);

        // assert json count data.*.name
        $response->assertJsonCount(1, "data.*.name");
    }
}
